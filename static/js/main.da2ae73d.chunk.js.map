{"version":3,"sources":["components/Header/header.js","components/Home/home.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","href","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","aria-label","role","aria-labelledby","Component","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+QAEqBA,E,iLAEjB,OACE,yBAAKC,GAAG,eACN,yBAAKC,UAAU,0BAA0BD,GAAG,YAC1C,uBAAGC,UAAU,eAAeC,KAAK,KAC/B,yBACEF,GAAG,WACHG,IAA8B,sBAGlC,4BACEF,UAAU,iBACVG,KAAK,SACLC,cAAY,WACZC,cAAY,qBACZC,gBAAc,oBACdC,gBAAc,QACdC,gBAAc,OACdC,aAAW,qBAEX,0BAAMT,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BD,GAAG,qBAC3C,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWD,GAAG,WAAWE,KAAK,KAA3C,SACQ,0BAAMD,UAAU,WAAhB,eAGV,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWD,GAAG,cAAcE,KAAK,KAA9C,YAIF,wBAAID,UAAU,qBACZ,uBACEA,UAAU,2BACVC,KAAK,IACLF,GAAG,yBACHW,KAAK,SACLN,cAAY,WACZG,gBAAc,SANhB,aAUA,yBACEP,UAAU,gBACVW,kBAAgB,yBAChBH,gBAAc,QAEd,uBAAGR,UAAU,gBAAgBC,KAAK,KAAlC,QAGA,uBAAGD,UAAU,gBAAgBC,KAAK,KAAlC,YAGA,uBAAGD,UAAU,gBAAgBC,KAAK,KAAlC,oB,GAzDkBW,aCAfC,E,iLAEjB,OACE,yBAAKb,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,wBAAd,YACA,6BACA,uBAAGA,UAAU,sBAAb,qoBAWE,6BAXF,4zBA0BA,yBAAKE,KAAG,U,GAjCgBU,aCkBnBE,G,uLAbX,OACE,yBAAKf,GAAG,WACN,yBAAKA,GAAG,kBACN,kBAAC,EAAD,MACA,yBAAKA,GAAG,aACN,kBAAC,EAAD,a,GAPMa,cCOEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.da2ae73d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div id=\"main-header\">\n        <nav className=\"navbar navbar-expand-lg\" id=\"home-nav\">\n          <a className=\"navbar-brand\" href=\"#\">\n            <img\n              id=\"nav-Logo\"\n              src={process.env.PUBLIC_URL + \"/images/Logo.png\"}\n            ></img>\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            data-target=\"#navbarNavDropdown\"\n            aria-controls=\"navbarNavDropdown\"\n            aria-expanded=\"false\"\n            aria-haspopup=\"true\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" id=\"home-btn\" href=\"#\">\n                  About <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" id=\"contact-btn\" href=\"#\">\n                  Contact\n                </a>\n              </li>\n              <li className=\"nav-item dropdown\">\n                <a\n                  className=\"nav-link dropdown-toggle\"\n                  href=\"#\"\n                  id=\"navbarDropdownMenuLink\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  Portfolio\n                </a>\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"navbarDropdownMenuLink\"\n                  aria-haspopup=\"true\"\n                >\n                  <a className=\"dropdown-item\" href=\"#\">\n                    Apps\n                  </a>\n                  <a className=\"dropdown-item\" href=\"#\">\n                    Projects\n                  </a>\n                  <a className=\"dropdown-item\" href=\"#\">\n                    Resume\n                  </a>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4 home-title\">About Me</h1>\n          <hr></hr>\n          <p className=\"lead about-content\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras ornare\n            scelerisque dui vel cursus. Aliquam gravida dictum eros, sit amet\n            fermentum eros tempor eget. Donec vehicula sit amet tellus vel\n            ultrices. Sed vel dolor justo. Vestibulum malesuada velit purus, ut\n            condimentum velit bibendum vitae. Pellentesque eget enim ante.\n            Aenean sodales ex ac mauris faucibus blandit. Etiam eu feugiat arcu.\n            Phasellus at elementum est. Nulla ornare odio sit amet augue\n            lacinia, sed ornare purus eleifend. Fusce tincidunt rhoncus ex ut\n            commodo. Mauris faucibus dui mi, nec viverra dolor dapibus nec. Cras\n            et nibh non nibh vestibulum tristique a a augue.\n            <hr></hr>\n            Donec non pellentesque ligula, id vulputate quam. Fusce dictum, leo\n            placerat laoreet tristique, urna lorem imperdiet massa, a\n            consectetur risus massa quis nisi. Nullam fringilla lectus at mi\n            maximus viverra. Ut aliquet in ante sed condimentum. Sed posuere\n            malesuada ligula. Morbi porttitor interdum turpis quis vestibulum.\n            Aliquam feugiat dui erat, non varius ligula egestas eu. Quisque eu\n            ex risus. Nulla sollicitudin sit amet enim aliquam vestibulum.\n            Phasellus ullamcorper scelerisque elit, in fermentum eros varius at.\n            In ullamcorper nisi ante, et ullamcorper metus lobortis eget. Fusce\n            at diam tempus, pretium quam sed, sagittis eros. Integer euismod,\n            tortor placerat vulputate aliquet, magna libero auctor lectus, nec\n            malesuada quam elit ac odio. Duis sit amet dictum magna. Quisque\n            suscipit consequat urna eget mattis.\n          </p>\n          <img src></img>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header/header\";\nimport Home from \"./components/Home/home\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"rp-page\">\n        <div id=\"container-wrap\">\n          <Header />\n          <div id=\"main-page\">\n            <Home />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}